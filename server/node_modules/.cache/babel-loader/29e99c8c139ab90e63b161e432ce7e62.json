{"ast":null,"code":"import _slicedToArray from \"/Users/saransu/Test/server/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/saransu/Test/server/src/App.js\";\nimport React, { useState } from 'react';\nimport WebSocketWrapper from \"./WebSocketWrapper\";\n\nfunction App() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useState3 = useState(\"Hello\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  let childMethod = null;\n\n  function handleData(data) {\n    console.log(\"Message received: \" + data);\n    setCount(data);\n  }\n\n  function acceptChildMethod(method) {\n    console.log(\"Setting method\");\n    console.log(method);\n    childMethod = method;\n  }\n\n  console.log(\"Rendering app\");\n  console.log(\"CHILD METHOD IS\");\n  console.log(childMethod);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Count: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, count), React.createElement(\"button\", {\n    onClick: () => childMethod(\"Hello Server\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Send Message\"), React.createElement(WebSocketWrapper, {\n    url: \"ws://localhost:5000/echo\",\n    message: message,\n    reconnect: true,\n    debug: true,\n    shareMethods: acceptChildMethod,\n    onMessage: data => handleData(data),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saransu/Test/server/src/App.js"],"names":["React","useState","WebSocketWrapper","App","count","setCount","message","setMessage","childMethod","handleData","data","console","log","acceptChildMethod","method"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACeF,QAAQ,CAAC,CAAD,CADvB;AAAA;AAAA,QACJG,KADI;AAAA,QACGC,QADH;;AAAA,qBAEmBJ,QAAQ,CAAC,OAAD,CAF3B;AAAA;AAAA,QAEJK,OAFI;AAAA,QAEKC,UAFL;;AAGX,MAAIC,WAAW,GAAG,IAAlB;;AAEA,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,IAAnC;AACAL,IAAAA,QAAQ,CAACK,IAAD,CAAR;AACH;;AAED,WAASG,iBAAT,CAA2BC,MAA3B,EAAmC;AAC/BH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACAN,IAAAA,WAAW,GAAGM,MAAd;AACH;;AAEDH,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASJ,KAAT,CADX,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAMI,WAAW,CAAC,cAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAC,0BAAtB;AAAiD,IAAA,OAAO,EAAEF,OAA1D;AACkB,IAAA,SAAS,EAAE,IAD7B;AACmC,IAAA,KAAK,EAAE,IAD1C;AAEkB,IAAA,YAAY,EAAEO,iBAFhC;AAEmD,IAAA,SAAS,EAAGH,IAAD,IAAUD,UAAU,CAACC,IAAD,CAFlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AASH;;AAGD,eAAeP,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport WebSocketWrapper from \"./WebSocketWrapper\";\n\nfunction App() {\n    const [count, setCount] = useState(0);\n    const [message, setMessage] = useState(\"Hello\");\n    let childMethod = null;\n\n    function handleData(data) {\n        console.log(\"Message received: \" + data);\n        setCount(data);\n    }\n\n    function acceptChildMethod(method) {\n        console.log(\"Setting method\");\n        console.log(method);\n        childMethod = method;\n    }\n\n    console.log(\"Rendering app\");\n    console.log(\"CHILD METHOD IS\");\n    console.log(childMethod);\n    return (\n        <div>\n            Count: <strong>{count}</strong>\n            <button onClick={() => childMethod(\"Hello Server\")}>Send Message</button>\n            <WebSocketWrapper url='ws://localhost:5000/echo' message={message}\n                              reconnect={true} debug={true}\n                              shareMethods={acceptChildMethod} onMessage={(data) => handleData(data)}/>\n        </div>\n    );\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}