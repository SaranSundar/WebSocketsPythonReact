{"ast":null,"code":"import _slicedToArray from \"/Users/saransu/Test/server/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/saransu/Test/server/src/App.js\";\nimport React, { useState } from 'react';\nimport Websocket from 'react-websocket';\n\nfunction WebSocketTest() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  function handleData(data) {\n    setCount(data);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Count: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, count), React.createElement(Websocket, {\n    url: \"ws://localhost:5000/random\",\n    onMessage: data => handleData(data),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleData = data => {\n      //let result = JSON.parse(data);\n      this.setState({\n        count: data\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    return WebSocketTest();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saransu/Test/server/src/App.js"],"names":["React","useState","Websocket","WebSocketTest","count","setCount","handleData","data","App","Component","constructor","props","setState","state","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,SAASC,aAAT,GAAyB;AAAA,oBACKF,QAAQ,CAAC,CAAD,CADb;AAAA;AAAA,QACdG,KADc;AAAA,QACPC,QADO;;AAGrB,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtBF,IAAAA,QAAQ,CAACE,IAAD,CAAR;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASH,KAAT,CADX,EAEI,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAC,4BAAf;AACW,IAAA,SAAS,EAAGG,IAAD,IAAUD,UAAU,CAACC,IAAD,CAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH;;AAED,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBL,UAPmB,GAOLC,IAAD,IAAU;AACnB;AACA,WAAKK,QAAL,CAAc;AAACR,QAAAA,KAAK,EAAEG;AAAR,OAAd;AACH,KAVkB;;AAEf,SAAKM,KAAL,GAAa;AACTT,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAODU,EAAAA,MAAM,GAAG;AACL,WAAOX,aAAa,EAApB;AACH;;AAf6B;;AAkBlC,eAAeK,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport Websocket from 'react-websocket';\n\nfunction WebSocketTest() {\n    const [count, setCount] = useState(0);\n\n    function handleData(data) {\n        setCount(data);\n    }\n\n    return (\n        <div>\n            Count: <strong>{count}</strong>\n            <Websocket url='ws://localhost:5000/random'\n                       onMessage={(data) => handleData(data)}/>\n        </div>\n    );\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 0\n        };\n    }\n\n    handleData = (data) => {\n        //let result = JSON.parse(data);\n        this.setState({count: data});\n    };\n\n    render() {\n        return WebSocketTest();\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}