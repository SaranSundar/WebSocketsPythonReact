{"ast":null,"code":"import _slicedToArray from \"/Users/saransu/Test/server/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/saransu/Test/server/src/App.js\";\nimport React, { useState } from \"react\";\nimport Websocket from \"react-websocket\";\nconst SERVER_URL = \"ws://localhost:5000/random\";\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        res = _useState2[0],\n        setRes = _useState2[1];\n\n  const sendMessage = () => {\n    const ws = new WebSocket(SERVER_URL);\n    ws.addEventListener(\"open\", () => {\n      console.log(\"Connected\");\n      setRes([...res, \"Connected.\"]);\n    });\n    ws.addEventListener(\"error\", () => {\n      console.log(\"Error, disconnected.\");\n      setRes([...res, \"Error, disconnected.\"]);\n      ws.close();\n    });\n    ws.addEventListener(\"close\", () => {\n      console.log(\"Disconnected\");\n      setRes([...res, \"Disconnected.\"]);\n      ws.close();\n    });\n    ws.addEventListener(\"message\", e => {\n      setRes([...res, e.data]);\n    }); // setTimeout(() => {\n    //     ws.close();\n    // }, 5000);\n  };\n\n  function handleData(data) {\n    let result = JSON.parse(data);\n    setRes([...res, result]);\n  }\n\n  const messages = res.map(v => {\n    return React.createElement(\"span\", {\n      key: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, v);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Click the button to get random numbers\"), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Server Response: \", messages), React.createElement(Websocket, {\n    url: \"ws://localhost:5000/random\",\n    onMessage: handleData(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saransu/Test/server/src/App.js"],"names":["React","useState","Websocket","SERVER_URL","App","res","setRes","sendMessage","ws","WebSocket","addEventListener","console","log","close","e","data","handleData","result","JSON","parse","messages","map","v"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,MAAMC,UAAU,GAAG,4BAAnB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACWH,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QACJI,GADI;AAAA,QACCC,MADD;;AAEX,QAAMC,WAAW,GAAG,MAAM;AACtB,UAAMC,EAAE,GAAG,IAAIC,SAAJ,CAAcN,UAAd,CAAX;AACAK,IAAAA,EAAE,CAACE,gBAAH,CAAoB,MAApB,EAA4B,MAAM;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAN,MAAAA,MAAM,CAAC,CAAC,GAAGD,GAAJ,EAAS,YAAT,CAAD,CAAN;AACH,KAHD;AAIAG,IAAAA,EAAE,CAACE,gBAAH,CAAoB,OAApB,EAA6B,MAAM;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAN,MAAAA,MAAM,CAAC,CAAC,GAAGD,GAAJ,EAAS,sBAAT,CAAD,CAAN;AACAG,MAAAA,EAAE,CAACK,KAAH;AACH,KAJD;AAKAL,IAAAA,EAAE,CAACE,gBAAH,CAAoB,OAApB,EAA6B,MAAM;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAN,MAAAA,MAAM,CAAC,CAAC,GAAGD,GAAJ,EAAS,eAAT,CAAD,CAAN;AACAG,MAAAA,EAAE,CAACK,KAAH;AACH,KAJD;AAKAL,IAAAA,EAAE,CAACE,gBAAH,CAAoB,SAApB,EAAgCI,CAAD,IAAO;AAClCR,MAAAA,MAAM,CAAC,CAAC,GAAGD,GAAJ,EAASS,CAAC,CAACC,IAAX,CAAD,CAAN;AACH,KAFD,EAhBsB,CAmBtB;AACA;AACA;AACH,GAtBD;;AAwBA,WAASC,UAAT,CAAoBD,IAApB,EAA0B;AACtB,QAAIE,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAb;AACAT,IAAAA,MAAM,CAAC,CAAC,GAAGD,GAAJ,EAASY,MAAT,CAAD,CAAN;AACH;;AAED,QAAMG,QAAQ,GAAGf,GAAG,CAACgB,GAAJ,CAASC,CAAD,IAAO;AAC5B,WAAO;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,CAAf,CAAP;AACH,GAFgB,CAAjB;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAuBF,QAAvB,CALJ,EAMI,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAC,4BAAf;AACW,IAAA,SAAS,EAAEJ,UAAU,EADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAWH;;AAED,eAAeZ,GAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Websocket from \"react-websocket\";\n\nconst SERVER_URL = \"ws://localhost:5000/random\";\n\nfunction App() {\n    const [res, setRes] = useState([]);\n    const sendMessage = () => {\n        const ws = new WebSocket(SERVER_URL);\n        ws.addEventListener(\"open\", () => {\n            console.log(\"Connected\");\n            setRes([...res, \"Connected.\"]);\n        });\n        ws.addEventListener(\"error\", () => {\n            console.log(\"Error, disconnected.\");\n            setRes([...res, \"Error, disconnected.\"]);\n            ws.close();\n        });\n        ws.addEventListener(\"close\", () => {\n            console.log(\"Disconnected\");\n            setRes([...res, \"Disconnected.\"]);\n            ws.close();\n        });\n        ws.addEventListener(\"message\", (e) => {\n            setRes([...res, e.data]);\n        });\n        // setTimeout(() => {\n        //     ws.close();\n        // }, 5000);\n    };\n\n    function handleData(data) {\n        let result = JSON.parse(data);\n        setRes([...res, result]);\n    }\n\n    const messages = res.map((v) => {\n        return <span key={v}>{v}</span>;\n    });\n    return (\n        <div>\n            <p>Click the button to get random numbers</p>\n            {/*<button type=\"button\" onClick={sendMessage}>*/}\n            {/*    Hello!*/}\n            {/*</button>*/}\n            <pre>Server Response: {messages}</pre>\n            <Websocket url=\"ws://localhost:5000/random\"\n                       onMessage={handleData()}/>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}