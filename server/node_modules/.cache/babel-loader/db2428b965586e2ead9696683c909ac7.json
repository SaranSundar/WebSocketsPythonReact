{"ast":null,"code":"import _slicedToArray from \"/Users/saransu/Test/server/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/saransu/Test/server/src/App.js\";\nimport React, { useState } from 'react';\nimport Websocket from 'react-websocket';\n\nfunction App() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  function handleData(data) {\n    setCount(data);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Count: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, count), React.createElement(Websocket, {\n    url: \"ws://localhost:5000/random\",\n    onMessage: data => setCount(data),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saransu/Test/server/src/App.js"],"names":["React","useState","Websocket","App","count","setCount","handleData","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACeF,QAAQ,CAAC,CAAD,CADvB;AAAA;AAAA,QACJG,KADI;AAAA,QACGC,QADH;;AAGX,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtBF,IAAAA,QAAQ,CAACE,IAAD,CAAR;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASH,KAAT,CADX,EAEI,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAC,4BAAf;AACW,IAAA,SAAS,EAAGG,IAAD,IAAUF,QAAQ,CAACE,IAAD,CADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH;;AAGD,eAAeJ,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport Websocket from 'react-websocket';\n\nfunction App() {\n    const [count, setCount] = useState(0);\n\n    function handleData(data) {\n        setCount(data);\n    }\n\n    return (\n        <div>\n            Count: <strong>{count}</strong>\n            <Websocket url='ws://localhost:5000/random'\n                       onMessage={(data) => setCount(data)}/>\n        </div>\n    );\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}